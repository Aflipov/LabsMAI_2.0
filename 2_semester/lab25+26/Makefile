# Makefile для сборки программы работы со стеком и сортировки

# Имя компилятора
CC = gcc

# Имя редактора связей (обычно совпадает с компилятором)
LD = gcc

# Флаги компиляции (включить отладочную информацию, предупреждения и соответствие стандарту)
CCFLAGS = -g -Wall -pedantic -std=c99

# Флаги связывания (в данном случае пустые)
LDFLAGS =

# Имя исполняемого файла
TARGET = stack_sort

# Список объектных файлов
OBJ = stack.o sort.o main.o

# Правило по умолчанию: создать исполняемый файл
all: $(TARGET)

# Правило для создания исполняемого файла из объектных файлов
$(TARGET): $(OBJ)
	$(LD) $(LDFLAGS) -o $(TARGET) $(OBJ)

# Правила для создания объектных файлов из соответствующих исходных файлов
stack.o: stack.c stack.h
	$(CC) $(CCFLAGS) -c stack.c

sort.o: sort.c stack.h sort.h
	$(CC) $(CCFLAGS) -c sort.c

main.o: main.c stack.h sort.h
	$(CC) $(CCFLAGS) -c main.c

# Правило для очистки проекта (удаление объектных файлов и исполняемого файла)
clean:
	rm -f $(OBJ) $(TARGET)

# Указание суффиксов (необязательно в данном случае, т.к. правила уже определены явно)
.SUFFIXES: .c .o